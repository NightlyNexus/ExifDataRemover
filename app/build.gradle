// Manifest version information!
def versionMajor = 1
def versionMinor = 0
def versionPatch = 0
def versionBuild = 0

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
  namespace 'com.nightlynexus.exifdataremover'

  compileSdkVersion versions.compileSdk

  defaultConfig {
    applicationId namespace

    minSdkVersion 23
    targetSdkVersion 34

    versionCode versionMajor * 1000000 + versionMinor * 10000 + versionPatch * 100 + versionBuild
    versionName "$versionMajor.$versionMinor.$versionPatch"
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  kotlinOptions {
    jvmTarget = '1.8'
  }

  lint {
    abortOnError true
    warningsAsErrors true
    lintConfig rootProject.file('lint.xml')
    textReport true
    htmlReport true
    htmlOutput rootProject.file("lint-reports/${name}.html")
    // We run a full lint analysis as build part in CI, so skip vital checks for assemble tasks.
    checkReleaseBuilds false
  }

  buildTypes {
  }

  productFlavors {
    flavorDimensions = ['environment']

    internal {
      applicationIdSuffix '.internal'
      dimension 'environment'
    }

    production {
      dimension 'environment'
    }
  }
}

dependencies {
  implementation deps.kotlin.stdlibJdk8
  implementation deps.kotlin.coroutines
  implementation deps.kotlin.coroutinesAndroid
  implementation deps.okio
  implementation deps.androidx.annotations
  implementation deps.androidx.appcompat

  internalImplementation deps.leakcanary
}
