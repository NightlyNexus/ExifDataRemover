buildscript {
  ext.versions = [
      'androidAnnotations': '1.5.0',
      'androidGradlePlugin': '7.3.0',
      'appcompat': '1.5.1',
      'compileSdk': 33,
      'coroutines': '1.6.4',
      'kotlin': '1.7.20',
      'leakcanary': '2.9.1',
      'okio': '3.2.0'
  ]

  ext.deps = [
      'androidAnnotations': "androidx.annotation:annotation:$versions.androidAnnotations",
      'androidGradlePlugin': "com.android.tools.build:gradle:$versions.androidGradlePlugin",
      'appcompat': "androidx.appcompat:appcompat:$versions.appcompat",
      'kotlin': [
          'coroutines': "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines",
          'coroutinesAndroid': "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines",
          'gradlePlugin': "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin",
          'stdlibJdk7': "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
      ],
      'leakcanary': "com.squareup.leakcanary:leakcanary-android:$versions.leakcanary",
      'okio': "com.squareup.okio:okio:$versions.okio"
  ]

  dependencies {
    classpath deps.androidGradlePlugin
    classpath deps.kotlin.gradlePlugin
  }

  repositories {
    google()
    mavenCentral()
    maven { url 'https://plugins.gradle.org/m2/' }
  }
}

allprojects {
  repositories {
    google()
    mavenCentral()
  }

  afterEvaluate { project ->
    project.configurations.all {
      resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.version.endsWith('+')) {
          throw new GradleException(
              "Wildcard dependency forbidden: ${requested.group}:${requested.name}:${requested.version}")
        }
      }
    }
  }
}
